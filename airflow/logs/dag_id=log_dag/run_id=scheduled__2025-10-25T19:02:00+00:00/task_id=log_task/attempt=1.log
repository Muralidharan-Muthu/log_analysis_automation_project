{"timestamp":"2025-10-25T19:02:01.466520Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-25T19:02:01.467592Z","level":"info","event":"Filling up the DagBag from /home/mural/log-analysis-automation/airflow/dags/log_analyzer_dag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-25T19:02:01.506924Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.507021Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.507139Z","level":"info","event":"Current task name:log_task","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.507174Z","level":"info","event":"Dag name:log_dag","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.507598Z","level":"info","event":"Tmp dir root location: /tmp","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":78}
{"timestamp":"2025-10-25T19:02:01.508217Z","level":"info","event":"Running command: ['/usr/bin/bash', '-c', 'sh /home/mural/log-analysis-automation/wrapperScript.sh ']","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":88}
{"timestamp":"2025-10-25T19:02:01.513000Z","level":"info","event":"Output:","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":99}
{"timestamp":"2025-10-25T19:02:01.566949Z","level":"info","event":"[2025-10-25 19:02:01,566] WARNING Invalid RUN_DATE 'None' , using today's date","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-25T19:02:01.567078Z","level":"info","event":"[2025-10-25 19:02:01,566] WARNING Log directory logs does not exist","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-25T19:02:01.567114Z","level":"info","event":"[2025-10-25 19:02:01,566] INFO No errors found; nothing to insert.","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-25T19:02:01.567137Z","level":"info","event":"[2025-10-25 19:02:01,566] INFO Run completed for date 2025-10-25","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":106}
{"timestamp":"2025-10-25T19:02:01.575149Z","level":"info","event":"Command exited with return code 0","logger":"airflow.task.hooks.airflow.providers.standard.hooks.subprocess.SubprocessHook","filename":"subprocess.py","lineno":110}
{"timestamp":"2025-10-25T19:02:01.575748Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019a1cbf-c53c-7199-851c-6742e7e42637'), task_id='log_task', dag_id='log_dag', run_id='scheduled__2025-10-25T19:02:00+00:00', try_number=1, dag_version_id=UUID('019a1cab-d630-7983-941b-6b9c99f134c3'), map_index=-1, hostname='Muralidharan.localdomain', context_carrier={}, task=<Task(BashOperator): log_task>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 10, 25, 19, 2, 1, 430064, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
{"timestamp":"2025-10-25T19:02:01.606491Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.606607Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-25T19:02:01.606845Z","level":"info","event":"Task operator:<Task(BashOperator): log_task>","logger":"task.stdout"}
